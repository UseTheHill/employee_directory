{"version":3,"sources":["components/Header.js","components/Container.js","components/Table.js","utils/API.js","components/Search.js","components/Results.js","App.js","index.js"],"names":["Header","className","Container","props","children","Table","employees","matchSearch","sortedEmployees","flat","value","direction","sort","a","b","name","last","scope","onClick","reverseOrder","map","employee","imgSrc","picture","thumbnail","first","fullName","location","city","state","fullLocation","phoneNumber","phone","email","formattedBirthDate","moment","dob","date","format","src","alt","login","username","axios","get","Search","onSubmit","handleFormSubmit","type","placeholder","aria-label","onChange","handleInputChange","EmployeeResults","search","event","target","setState","searchEmployees","trim","preventDefault","formattedSearch","charAt","toUpperCase","slice","verifiedMatches","filter","includes","push","API","then","res","data","results","catch","err","console","log","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e914544.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid bg-info\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4 text-center mb-3\">Employee Directory</h1>\n        <p className=\"lead text-center\">\n          Employee Directory utilizing the Random User API.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport Container from \"./Container\";\nimport * as moment from \"moment\";\n\nfunction Table(props) {\n  const { employees, matchSearch } = props;\n\n  // Sorted employees = an array of all employees that match the search (if specified)\n  // The array is flattened, meaning that the sub-array that was nested is\n  // flattened back into the parent array\n  let sortedEmployees = [...matchSearch].flat();\n\n  // If the search box is blank (if a user deleted a previous search)\n  // this will revert the employees listed back to the original list pulled from the API\n\n  if (props.value === \"\") {\n    sortedEmployees = [...employees];\n  }\n\n  // This sorting function works by comparing the last names to each other\n  // Two last names are passed in as arguments and compared against each other\n  // -1 = the first last name (a) should come before the second (b)\n  // 1 = the second last name (b) should come before the first (a)\n  // 0 = the last names are identical\n\n  // Switch from A-Z and Z-A\n  if (props.direction === \"Ascending\") {\n    sortedEmployees.sort((a, b) => {\n      if (a.name.last < b.name.last) {\n        return -1;\n      } else if (a.name.last > b.name.last) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  } else if (props.direction === \"Descending\") {\n    sortedEmployees.sort((a, b) => {\n      if (a.name.last > b.name.last) {\n        return -1;\n      } else if (a.name.last < b.name.last) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  return (\n    <Container>\n      <div className=\"table-responsive\">\n        <table className=\"table table-hover text-center\">\n          <thead className=\"bg-info text-white\">\n            <tr>\n              <th scope=\"col\">Image</th>\n              <th scope=\"col\">\n                <button\n                  className=\"btn btn-secondary\"\n                  onClick={props.reverseOrder}\n                >\n                  Name\n                </button>\n              </th>\n              <th scope=\"col\">Location</th>\n              <th scope=\"col\">Phone</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Date of Birth</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedEmployees.map((employee) => {\n              // For each of the 100 items in the array (employee data), this is the\n              // information that is pulled from the response and displayed in the table\n              // Moment is used to format birthdates.\n\n              const imgSrc = employee.picture.thumbnail;\n\n              const { first, last } = employee.name;\n              const fullName = `${first} ${last}`;\n\n              const { city, state } = employee.location;\n              const fullLocation = `${city}, ${state}`;\n\n              const phoneNumber = employee.phone;\n\n              const email = employee.email;\n\n              const formattedBirthDate = moment(employee.dob.date).format(\n                \"MM/DD/YYYY\"\n              );\n\n              return (\n                <tr key={employee.login.username}>\n                  <th scope=\"row\">\n                    <img src={imgSrc} alt=\"Employee portrait\" />\n                  </th>\n                  <td className=\"align-middle\">{fullName}</td>\n                  <td className=\"align-middle\">{fullLocation}</td>\n                  <td className=\"align-middle\">{phoneNumber}</td>\n                  <td className=\"align-middle\">{email}</td>\n                  <td className=\"align-middle\">{formattedBirthDate}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </Container>\n  );\n}\n\nexport default Table;\n","import axios from \"axios\";\n\nconst directoryUrl =\n  \"https://randomuser.me/api/?nat=au,ca,gb,us,nz&results=100\";\n\nexport default {\n  fetchRandomEmployees: function () {\n    return axios.get(directoryUrl);\n  },\n};\n","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <nav className=\"navbar navbar-light bg-light d-flex justify-content-center mt-3 mb-3\">\n      <form className=\"form-inline\" onSubmit={props.handleFormSubmit}>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={props.handleInputChange}\n        />\n        <button className=\"btn btn-info my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </nav>\n  );\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\nimport API from \"../utils/API\";\nimport Search from \"./Search\";\n\nclass EmployeeResults extends Component {\n  state = {\n    employees: [],\n    search: \"\",\n    matchSearch: [],\n    direction: \"Ascending\",\n  };\n\n  componentDidMount() {\n    API.fetchRandomEmployees()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          matchSearch: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.searchEmployees(value.trim());\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.searchEmployees(this.state.search.trim());\n  };\n\n  searchEmployees = (event) => {\n    if (event) {\n      // Capitalize the first letter of the string the user entered because\n      // that is how the names are in the Random User API\n      let formattedSearch = event.charAt(0).toUpperCase() + event.slice(1);\n\n      // A new array will hold all the matches, which will then be used to update state\n      let verifiedMatches = [];\n\n      // Employees are filtered to see if the first or last name includes\n      // what was entered into the search bar\n      this.state.employees.filter((employee) => {\n        if (\n          employee.name.first.includes(formattedSearch) ||\n          employee.name.last.includes(formattedSearch)\n        ) {\n          // All verified matches in the search are pushed to this array\n          // The entire employee object is pushed\n\n          verifiedMatches.push(employee);\n\n          // State is updated to reflect the matches\n          this.setState({ matchSearch: [verifiedMatches] });\n\n          return `${employee.name.first} ${employee.name.last}`;\n        } else {\n          return \"No employees found.\";\n        }\n      });\n    }\n  };\n\n  reverseOrder = (event) => {\n    if (this.state.direction === \"Ascending\") {\n      this.setState({ direction: \"Descending\" });\n    } else if (this.state.direction === \"Descending\") {\n      this.setState({ direction: \"Ascending\" });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Search\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <Table\n          employees={this.state.employees}\n          matchSearch={this.state.matchSearch}\n          value={this.state.search}\n          direction={this.state.direction}\n          reverseOrder={this.reverseOrder}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EmployeeResults;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport EmployeeResults from \"./components/Results\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <EmployeeResults />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}